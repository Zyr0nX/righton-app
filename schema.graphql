schema {
  query: Query
  mutation: Mutation
}

type Game {
  cluster: String
  createdAt: AWSDateTime
  description: String
  domain: String
  grade: String
  id: ID!
  standard: String
  title: String!
  updatedAt: AWSDateTime
}

type GameSession {
  gameCode: Int!
  gameId: ID!
  gameSessionID: ID!
  hintsRevealTime: Int
  multiDeviceMode: Boolean!
  startedDateTimeUTC: AWSDateTime!
  state: GameSessionState!
  teamIds: [Int]!
  votingTime: Int
}

type Mutation {
  saveGameSession(gameSession: GameSessionInput): GameSession
}

type Query {
  getGame(gameId: ID): Game
  listGames: [Game]
  listQuestions: [Question]
}

type Question {
  answer: String!
  createdAt: AWSDateTime
  id: ID!
  imageURL: String
  instructions: AWSJSON
  text: String!
  updatedAt: AWSDateTime
}

enum GameSessionState {
  ChoosingTrickAnswer
  Finished
  InitialIntro
  NotStarted
  ReviewingResult
  Voting
}

input GameSessionInput {
  gameCode: Int
  gameId: ID!
  hintsRevealTime: Int
  id: ID!
  multiDeviceMode: Boolean!
  startedDateTimeUTC: AWSDateTime
  teamIds: [Int]
  votingTime: Int
}
